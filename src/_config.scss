@charset "UTF-8";

@import "../../node_modules/sass-config/config";

/// Default sass-bem configuration settings.
///
/// @type map
///
/// @prop {boolean} debug [false] - Turn debug mode on/off. To get outlines on selectors.
///
/// @prop {string} separator.element [__] - Element separator from parent block.
///
/// @prop {string} separator.modifier [--] - Modifier separator from parent block.
///
/// @prop {string} separator.state [-] - States separator from parent block.
///
/// @prop {string} namespace.component [c] - Component selector namespace.
///
/// @prop {string} namespace.hack [_] - Hack selector namespace.
///
/// @prop {string} namespace.object [o] - Object selector namespace.
///
/// @prop {string} namespace.scope [s] - Scope selector namespace.
///
/// @prop {string} namespace.test [qa] - Test selector namespace.
///
/// @prop {string} namespace.theme [t] - Theme selector namespace.
///
/// @prop {string} namespace.utility [u] - Utility selector namespace.
///
/// @prop {list} shortcodes - Shortcodes list for parsing.
///
/// @access public

@if not function-exists(config) {
  @error 'sass-config package need to be imported before sass-bem package';
}

$bem: (
  'debug': false,
  'separator': (
    'element': "__",
    'modifier': "--",
    'state': "-",
  ),
  'namespace': (
    'component': "c",
    'hack': "_",
    'object': "o",
    'scope': "s",
    'test': "qa",
    'theme': "t",
    'utility': "u",
  ),
  'shortcodes': (
    'ab': ('before', 'after')
  )
) !default;

@include config('bem', $bem);

/// Turn debug mode on/off. To get outlines on selectors.
///
/// @type Boolean

$bem-debug: config('bem.debug') !default;

/// Element separator from parent block.
///
/// @type String

$bem-element-separator: config('bem.separator.element') !default;

/// Modifier separator from parent block.
///
/// @type String

$bem-modifier-separator: config('bem.separator.modifier') !default;

/// States separator from parent block.
///
/// @type String

$bem-state-separator: config('bem.separator.state') !default;

/// Component selector namespace.
///
/// @type String

$bem-component-namespace: config('bem.namespace.component') !default;

/// Hack selector namespace.
///
/// @type String

$bem-hack-namespace: config('bem.namespace.hack') !default;

/// Object selector namespace.
///
/// @type String

$bem-object-namespace: config('bem.namespace.object') !default;

/// Scope selector namespace.
///
/// @type String

$bem-scope-namespace: config('bem.namespace.scope') !default;

/// Test selector namespace.
///
/// @type String

$bem-test-namespace: config('bem.namespace.test') !default;

/// Theme selector namespace.
///
/// @type String

$bem-theme-namespace: config('bem.namespace.theme') !default;

/// Utility selector namespace.
///
/// @type String

$bem-utility-namespace: config('bem.namespace.utility') !default;

/// Shortcodes list for parsing.
///
/// @type List

$bem-shortcodes: config('bem.shortcodes') !default;
